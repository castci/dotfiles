set encoding=utf-8
set shell=/bin/bash
set nocompatible
set autoindent
set backspace=indent,eol,start
set expandtab
set hlsearch
set incsearch
set laststatus=2
set nowrap
set number
set relativenumber
set rtp+=~/.vim/bundle/Vundle.vim
set showmatch
set smartcase
set undolevels=1000
set visualbell

let mapleader = "'"
syntax on
color gotham256
filetype plugin indent on

call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'cakebaker/scss-syntax.vim'
Plugin 'chr4/nginx.vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'edkolev/tmuxline.vim'
Plugin 'jiangmiao/auto-pairs'
Plugin 'junegunn/fzf.vim'
Plugin 'mileszs/ack.vim'
Plugin 'mxw/vim-jsx'
Plugin 'pangloss/vim-javascript'
Plugin 'rking/ag.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'SirVer/ultisnips'
Plugin 'ternjs/tern_for_vim', { 'do': 'yarn' }
Plugin 'terryma/vim-multiple-cursors'
Plugin 'tomtom/tcomment_vim'
Plugin 'tomtom/tlib_vim'
Plugin 'tpope/vim-sleuth'
Plugin 'tpope/vim-fugitive'
Plugin 'Valloric/YouCompleteMe'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'whatyouhide/vim-gotham'
Plugin 'Xuyuanp/nerdtree-git-plugin'
call vundle#end()

" Fuzzy
set rtp+=/usr/local/opt/fzf
set rtp+=~/.fzf
nmap <C-s> :Buffers<CR>
nmap <C-a> :Tags<CR>
nmap <C-f> :Files<CR>

let g:ackprg = 'ag --vimgrep'
nnoremap ff :Ack!<SPACE>
nmap cf :Ack! '\b<cword>\b' <CR>

let g:airline#extensions#tabline#enabled = 3
let g:airline_theme='wombat'
let g:airline_powerline_fonts = 1

let NERDTreeQuitOnOpen = 1
let NERDTreeAutoDeleteBuffer = 1
let NERDTreeWinSize=50
autocmd StdinReadPre * let s:std_in=1
nnoremap <silent> <C-t> :call NERDTreeToggleInCurDir()<CR>
function! NERDTreeToggleInCurDir()
    if (exists("t:NERDTreeBufName") && bufwinnr(t:NERDTreeBufName) != -1)
        NERDTreeToggle
    else
        NERDTreeFind
    endif
endfunction

let g:UltiSnipsExpandTrigger='<Tab>'
let g:UltiSnipsJumpForwardTrigger='<Tab>'
let g:UltiSnipsJumpBackwardTrigger='<S-Tab>'

let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_autoclose_preview_window_after_completion = 1

nmap <CR> G

"Comment with leader
map <leader>cc <c-_><c-_>
map <leader>cp <c-_>p
map <leader>cb <c-_>b

"Move lines
nnoremap <Leader>k :m-2<CR>==
nnoremap <Leader>j :m+<CR>==

"for react
let g:jsx_ext_required = 1

"this is for airline
nnoremap <Leader>l :ls<CR>
nnoremap <Leader>b :bp<CR>
nnoremap <Leader>f :bn<CR>
nnoremap <Leader>g :e<CR>
nnoremap <Leader>1 :1b<CR>
nnoremap <Leader>2 :2b<CR>
nnoremap <Leader>3 :3b<CR>
nnoremap <Leader>4 :4b<CR>
nnoremap <Leader>5 :5b<CR>
nnoremap <Leader>6 :6b<CR>
nnoremap <Leader>7 :7b<CR>
nnoremap <Leader>8 :8b<CR>
nnoremap <Leader>9 :9b<CR>
nnoremap <Leader>0 :10b<CR>

" Tmuxline
let g:airline#extensions#tmuxline#enabled = 0
