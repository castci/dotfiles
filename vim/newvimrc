set shell=/usr/local/bin/fish
set autoindent
set backspace=indent,eol,start
set backupdir=~/.vim/tmp/
set directory=~/.vim/tmp/
set expandtab
set hlsearch
set incsearch
set ignorecase
set laststatus=2
set nocompatible
set nowrap
set number
set relativenumber
set rtp+=~/.vim/bundle/Vundle.vim
set showmatch
set smartcase
set undolevels=1000

filetype plugin indent on
syntax on
colorscheme nord
let mapleader="'"
let g:polyglot_disabled = ['json']

" " Show extension file
" let g:airline#extensions#tmuxline#enabled = 0
" let g:mustache_abbreviations = 1

" Remove beep
set noeb vb t_vb=
au GUIEnter * set vb t_vb=

" Add support for hbs files
autocmd BufRead,BufNewFile *.hbs set filetype=mustache
"
" Add support for hbs files
autocmd BufRead,BufNewFile *.conf set filetype=nginx

set rtp+=/usr/local/opt/fzf
set rtp+=~/.fzf

call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'edkolev/tmuxline.vim'
Plugin 'jiangmiao/auto-pairs'
Plugin 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plugin 'junegunn/fzf.vim'
Plugin 'mileszs/ack.vim'
Plugin 'neoclide/coc.nvim', {'do': { -> coc#util#install() }}
Plugin 'sheerun/vim-polyglot'
Plugin 'SirVer/ultisnips'
Plugin 'scrooloose/nerdtree'
Plugin 'tpope/vim-surround'
Plugin 'tomtom/tcomment_vim'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'vimwiki/vimwiki'
Plugin 'eliba2/vim-node-inspect'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'tpope/vim-fugitive'
call vundle#end()

" For react
let g:vim_jsx_pretty_colorful_config = 1

" Move between buffers
nnoremap <silent> <leader>p :bp<CR>
nnoremap <silent> <leader>n :bn<CR>
nnoremap <silent> <leader>x :bd<CR>

" unfocus
nnoremap <silent> <leader>no :noh<CR>

" Search Files
nnoremap <silent> <leader>f :GFiles<Cr>
nnoremap <silent> <C-f> :Files<Cr>
nnoremap <silent> <leader>s :Files <C-r>=expand("%:h")<CR>/<CR>
nnoremap <silent> <leader>b :Buffers<CR>
nnoremap <silent> <leader>h :History<CR>

" Search words
let g:ackprg = 'ag --vimgrep'
nnoremap ff :Ack!<SPACE>

" Move lines
nnoremap <leader>k :m-2<CR>==
nnoremap <leader>j :m+<CR>==

" NerdTree
let NERDTreeQuitOnOpen = 1
let NERDTreeAutoDeleteBuffer = 1
let NERDTreeWinSize=50
nnoremap <silent> <C-t> :call NERDTreeToggleInCurDir()<CR>
function! NERDTreeToggleInCurDir()
    if (exists("t:NERDTreeBufName") && bufwinnr(t:NERDTreeBufName) != -1)
        NERDTreeToggle
    else
        NERDTreeFind
    endif
endfunction

" Comment with leader
map <leader>cc <c-_><c-_>
map <leader>cb <c-_>b

" Airline
let g:airline_theme='night_owl'
let g:airline_powerline_fonts = 1

" coc Snipet Esto choca con el resize de tmux
" let g:coc_snippet_next = '<c-j>'
" let g:coc_snippet_prev = '<c-k>'
" prettier
command! -nargs=0 Prettier :CocCommand prettier.formatFile
" coc config
let g:coc_global_extensions = [
  \ 'coc-snippets',
  \ 'coc-pairs',
  \ 'coc-eslint',
  \ 'coc-prettier',
  \ 'coc-json',
  \]


inoremap <silent><expr> <TAB>
  \ pumvisible() ? coc#_select_confirm() :
  \ coc#expandableOrJumpable() ? "\<C-r>=coc#rpc#request('doKeymap', ['snippets-expand-jump',''])\<CR>" :
  \ <SID>check_back_space() ? "\<TAB>" :
  \ coc#refresh()

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

